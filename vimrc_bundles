" vim: set sw=4 ts=4 sts=4 et tw=78 foldmarker={,} foldlevel=9 foldmethod=marker spell nowrap:

" https://github.com/junegunn/vim-plug call {
    call plug#begin('~/.vim/plugged') "{
        "IDE {
            " aux:
            " asynchronous execution library for vim
            Plug 'Shougo/vimproc.vim', {'do' : 'make'}
            " A solid language pack for Vim
            Plug 'sheerun/vim-polyglot'
            " Language Server Protocol (LSP) support for vim and neovim.
            Plug 'autozimu/LanguageClient-neovim', {
             \ 'branch': 'next',
             \ 'do': 'bash install.sh',
             \ }
            " (Optional) Multi-entry selection UI.
            Plug 'junegunn/fzf'
            " asynchronous completion framework for neovim/Vim8
            if has('nvim')
                Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
            else
                Plug 'Shougo/deoplete.nvim'
                Plug 'roxma/nvim-yarp'
                Plug 'roxma/vim-hug-neovim-rpc'
            endif
            let g:deoplete#enable_at_startup = 1

            "
            " The reason we use a function is because we want to get the event
            " even if the package is unchanged as the updates are not tracked in
            " this repo
            function! BuildPyls(info)
                !./install.sh
            endfunction
             Plug 'ficoos/pyls-vimplug', { 'do': function('BuildPyls') }

            Plug 'scrooloose/nerdtree'
            Plug 'tpope/vim-surround'
            Plug 'https://github.com/tpope/vim-repeat.git'
            Plug 'easymotion/vim-easymotion'
            Plug 'https://github.com/tomtom/tcomment_vim'
            Plug 'godlygeek/tabular'
            Plug 'luochen1990/rainbow'
            if executable('ctags')
                Plug 'majutsushi/tagbar'
            endif
            Plug 'https://github.com/adelarsq/vim-matchit'
            
            " snippets
            Plug 'SirVer/ultisnips'
            Plug 'honza/vim-snippets'

            " buffer management
            Plug 'moll/vim-bbye'

            " decorate
            Plug 'vim-airline/vim-airline'
            Plug 'vim-airline/vim-airline-themes'

        "}
        "
        " colors {
            Plug 'https://github.com/natanbro/browny_vim.git'
            Plug 'nanotech/jellybeans.vim'
            Plug 'altercation/vim-colors-solarized'
            Plug 'spf13/vim-colors'
            Plug 'https://github.com/reedes/vim-colors-pencil.git'
            Plug 'NLKNguyen/papercolor-theme'
            Plug 'muellan/am-colors'
            Plug 'josuegaleas/jay'
            Plug 'morhetz/gruvbox'
            Plug 'mkarmona/materialbox'

        " }
        "
        " git {
            Plug 'tpope/vim-fugitive'
            Plug 'Xuyuanp/nerdtree-git-plugin'
            Plug 'airblade/vim-gitgutter'
        " }
        "
        " yaml {
            Plug 'stephpy/vim-yaml'
"           Plug 'https://github.com/digitalrounin/vim-yaml-folds.git'
"           Plug 'https://github.com/tarekbecker/vim-yaml-formatter.git'
                        
        " }

        " thesaurus support
        Plug 'Ron89/thesaurus_query.vim'

    " finish set up
    call plug#end()
    "}
    filetype plugin indent on

"}



